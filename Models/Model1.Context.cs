//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotelRoomBookingSystem.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LEC2023Entities : DbContext
    {
        public LEC2023Entities()
            : base("name=LEC2023Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BookingRoomsDetail> BookingRoomsDetails { get; set; }
        public virtual DbSet<BookingsInfo> BookingsInfoes { get; set; }
        public virtual DbSet<ClientsInfo> ClientsInfoes { get; set; }
        public virtual DbSet<RoomsInfo> RoomsInfoes { get; set; }
        public virtual DbSet<StaffsInfo> StaffsInfoes { get; set; }
        public virtual DbSet<SystemLog> SystemLogs { get; set; }
    
        public virtual int TSF_ConvertRoomIdsToBigIntList(string roomIds, ObjectParameter convertedRoomIds)
        {
            var roomIdsParameter = roomIds != null ?
                new ObjectParameter("RoomIds", roomIds) :
                new ObjectParameter("RoomIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TSF_ConvertRoomIdsToBigIntList", roomIdsParameter, convertedRoomIds);
        }
    
        public virtual int TSF_SqlCatchError(string parameters, Nullable<int> type)
        {
            var parametersParameter = parameters != null ?
                new ObjectParameter("Parameters", parameters) :
                new ObjectParameter("Parameters", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TSF_SqlCatchError", parametersParameter, typeParameter);
        }
    
        public virtual ObjectResult<USP_BookingRoomsDetails_GetByStatus_Result> USP_BookingRoomsDetails_GetByStatus(Nullable<short> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_BookingRoomsDetails_GetByStatus_Result>("USP_BookingRoomsDetails_GetByStatus", statusParameter);
        }
    
        public virtual ObjectResult<USP_BookingsInfo_BookingRoomsDetails_DeleteById_Result> USP_BookingsInfo_BookingRoomsDetails_DeleteById(Nullable<long> bookingId, Nullable<long> modifiedBy)
        {
            var bookingIdParameter = bookingId.HasValue ?
                new ObjectParameter("BookingId", bookingId) :
                new ObjectParameter("BookingId", typeof(long));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_BookingsInfo_BookingRoomsDetails_DeleteById_Result>("USP_BookingsInfo_BookingRoomsDetails_DeleteById", bookingIdParameter, modifiedByParameter);
        }
    
        public virtual ObjectResult<USP_BookingsInfo_BookingRoomsDetails_Insert_Result> USP_BookingsInfo_BookingRoomsDetails_Insert(Nullable<long> clientId, Nullable<System.DateTime> checkInDate, Nullable<System.DateTime> checkOutDate, string roomIds, Nullable<long> createdBy)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(long));
    
            var checkInDateParameter = checkInDate.HasValue ?
                new ObjectParameter("CheckInDate", checkInDate) :
                new ObjectParameter("CheckInDate", typeof(System.DateTime));
    
            var checkOutDateParameter = checkOutDate.HasValue ?
                new ObjectParameter("CheckOutDate", checkOutDate) :
                new ObjectParameter("CheckOutDate", typeof(System.DateTime));
    
            var roomIdsParameter = roomIds != null ?
                new ObjectParameter("RoomIds", roomIds) :
                new ObjectParameter("RoomIds", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_BookingsInfo_BookingRoomsDetails_Insert_Result>("USP_BookingsInfo_BookingRoomsDetails_Insert", clientIdParameter, checkInDateParameter, checkOutDateParameter, roomIdsParameter, createdByParameter);
        }
    
        public virtual ObjectResult<USP_BookingsInfo_BookingRoomsDetails_Select_Result> USP_BookingsInfo_BookingRoomsDetails_Select(Nullable<System.DateTime> checkInDate, Nullable<System.DateTime> checkOutDate)
        {
            var checkInDateParameter = checkInDate.HasValue ?
                new ObjectParameter("CheckInDate", checkInDate) :
                new ObjectParameter("CheckInDate", typeof(System.DateTime));
    
            var checkOutDateParameter = checkOutDate.HasValue ?
                new ObjectParameter("CheckOutDate", checkOutDate) :
                new ObjectParameter("CheckOutDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_BookingsInfo_BookingRoomsDetails_Select_Result>("USP_BookingsInfo_BookingRoomsDetails_Select", checkInDateParameter, checkOutDateParameter);
        }
    
        public virtual ObjectResult<USP_BookingsInfo_GetById_Result> USP_BookingsInfo_GetById(Nullable<long> bookingID)
        {
            var bookingIDParameter = bookingID.HasValue ?
                new ObjectParameter("BookingID", bookingID) :
                new ObjectParameter("BookingID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_BookingsInfo_GetById_Result>("USP_BookingsInfo_GetById", bookingIDParameter);
        }
    
        public virtual ObjectResult<USP_BookingsInfo_GetByStatus_Result> USP_BookingsInfo_GetByStatus(Nullable<short> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_BookingsInfo_GetByStatus_Result>("USP_BookingsInfo_GetByStatus", statusParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> USP_CheckRoomAvailability_GetByCheckInCheckOutDate(Nullable<System.DateTime> checkInDate, Nullable<System.DateTime> checkOutDate)
        {
            var checkInDateParameter = checkInDate.HasValue ?
                new ObjectParameter("CheckInDate", checkInDate) :
                new ObjectParameter("CheckInDate", typeof(System.DateTime));
    
            var checkOutDateParameter = checkOutDate.HasValue ?
                new ObjectParameter("CheckOutDate", checkOutDate) :
                new ObjectParameter("CheckOutDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("USP_CheckRoomAvailability_GetByCheckInCheckOutDate", checkInDateParameter, checkOutDateParameter);
        }
    
        public virtual ObjectResult<USP_ClientsInfo_DeleteById_Result> USP_ClientsInfo_DeleteById(Nullable<long> clientID, Nullable<long> modifiedBy)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ClientsInfo_DeleteById_Result>("USP_ClientsInfo_DeleteById", clientIDParameter, modifiedByParameter);
        }
    
        public virtual ObjectResult<USP_ClientsInfo_GetById_Result> USP_ClientsInfo_GetById(Nullable<long> clientID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ClientsInfo_GetById_Result>("USP_ClientsInfo_GetById", clientIDParameter);
        }
    
        public virtual ObjectResult<USP_ClientsInfo_GetByStatus_Result> USP_ClientsInfo_GetByStatus(Nullable<short> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ClientsInfo_GetByStatus_Result>("USP_ClientsInfo_GetByStatus", statusParameter);
        }
    
        public virtual ObjectResult<USP_ClientsInfo_Insert_Result> USP_ClientsInfo_Insert(string clientName, string clientIcPassport, string clientPhoneNumber, string clientEmail, string clientGender, Nullable<System.DateTime> clientBirthDate, string clientAddress, Nullable<long> createdBy)
        {
            var clientNameParameter = clientName != null ?
                new ObjectParameter("ClientName", clientName) :
                new ObjectParameter("ClientName", typeof(string));
    
            var clientIcPassportParameter = clientIcPassport != null ?
                new ObjectParameter("ClientIcPassport", clientIcPassport) :
                new ObjectParameter("ClientIcPassport", typeof(string));
    
            var clientPhoneNumberParameter = clientPhoneNumber != null ?
                new ObjectParameter("ClientPhoneNumber", clientPhoneNumber) :
                new ObjectParameter("ClientPhoneNumber", typeof(string));
    
            var clientEmailParameter = clientEmail != null ?
                new ObjectParameter("ClientEmail", clientEmail) :
                new ObjectParameter("ClientEmail", typeof(string));
    
            var clientGenderParameter = clientGender != null ?
                new ObjectParameter("ClientGender", clientGender) :
                new ObjectParameter("ClientGender", typeof(string));
    
            var clientBirthDateParameter = clientBirthDate.HasValue ?
                new ObjectParameter("ClientBirthDate", clientBirthDate) :
                new ObjectParameter("ClientBirthDate", typeof(System.DateTime));
    
            var clientAddressParameter = clientAddress != null ?
                new ObjectParameter("ClientAddress", clientAddress) :
                new ObjectParameter("ClientAddress", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ClientsInfo_Insert_Result>("USP_ClientsInfo_Insert", clientNameParameter, clientIcPassportParameter, clientPhoneNumberParameter, clientEmailParameter, clientGenderParameter, clientBirthDateParameter, clientAddressParameter, createdByParameter);
        }
    
        public virtual ObjectResult<USP_ClientsInfo_UpdateById_Result> USP_ClientsInfo_UpdateById(Nullable<long> clientID, string clientName, string clientIcPassport, string clientPhoneNumber, string clientEmail, string clientGender, Nullable<System.DateTime> clientBirthDate, string clientAddress, Nullable<long> modifiedBy)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var clientNameParameter = clientName != null ?
                new ObjectParameter("ClientName", clientName) :
                new ObjectParameter("ClientName", typeof(string));
    
            var clientIcPassportParameter = clientIcPassport != null ?
                new ObjectParameter("ClientIcPassport", clientIcPassport) :
                new ObjectParameter("ClientIcPassport", typeof(string));
    
            var clientPhoneNumberParameter = clientPhoneNumber != null ?
                new ObjectParameter("ClientPhoneNumber", clientPhoneNumber) :
                new ObjectParameter("ClientPhoneNumber", typeof(string));
    
            var clientEmailParameter = clientEmail != null ?
                new ObjectParameter("ClientEmail", clientEmail) :
                new ObjectParameter("ClientEmail", typeof(string));
    
            var clientGenderParameter = clientGender != null ?
                new ObjectParameter("ClientGender", clientGender) :
                new ObjectParameter("ClientGender", typeof(string));
    
            var clientBirthDateParameter = clientBirthDate.HasValue ?
                new ObjectParameter("ClientBirthDate", clientBirthDate) :
                new ObjectParameter("ClientBirthDate", typeof(System.DateTime));
    
            var clientAddressParameter = clientAddress != null ?
                new ObjectParameter("ClientAddress", clientAddress) :
                new ObjectParameter("ClientAddress", typeof(string));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ClientsInfo_UpdateById_Result>("USP_ClientsInfo_UpdateById", clientIDParameter, clientNameParameter, clientIcPassportParameter, clientPhoneNumberParameter, clientEmailParameter, clientGenderParameter, clientBirthDateParameter, clientAddressParameter, modifiedByParameter);
        }
    
        public virtual ObjectResult<USP_RoomsInfo_DeleteById_Result> USP_RoomsInfo_DeleteById(Nullable<long> roomID, Nullable<long> modifiedBy)
        {
            var roomIDParameter = roomID.HasValue ?
                new ObjectParameter("RoomID", roomID) :
                new ObjectParameter("RoomID", typeof(long));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RoomsInfo_DeleteById_Result>("USP_RoomsInfo_DeleteById", roomIDParameter, modifiedByParameter);
        }
    
        public virtual ObjectResult<USP_RoomsInfo_GetById_Result> USP_RoomsInfo_GetById(Nullable<long> roomId)
        {
            var roomIdParameter = roomId.HasValue ?
                new ObjectParameter("RoomId", roomId) :
                new ObjectParameter("RoomId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RoomsInfo_GetById_Result>("USP_RoomsInfo_GetById", roomIdParameter);
        }
    
        public virtual ObjectResult<USP_RoomsInfo_GetByStatus_Result> USP_RoomsInfo_GetByStatus(Nullable<short> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RoomsInfo_GetByStatus_Result>("USP_RoomsInfo_GetByStatus", statusParameter);
        }
    
        public virtual ObjectResult<USP_RoomsInfo_Insert_Result> USP_RoomsInfo_Insert(string roomFloor, Nullable<int> roomUnitPrice, Nullable<long> createdBy)
        {
            var roomFloorParameter = roomFloor != null ?
                new ObjectParameter("RoomFloor", roomFloor) :
                new ObjectParameter("RoomFloor", typeof(string));
    
            var roomUnitPriceParameter = roomUnitPrice.HasValue ?
                new ObjectParameter("RoomUnitPrice", roomUnitPrice) :
                new ObjectParameter("RoomUnitPrice", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RoomsInfo_Insert_Result>("USP_RoomsInfo_Insert", roomFloorParameter, roomUnitPriceParameter, createdByParameter);
        }
    
        public virtual ObjectResult<USP_RoomsInfo_UpdateById_Result> USP_RoomsInfo_UpdateById(Nullable<int> roomID, string roomFloor, Nullable<int> roomUnitPrice, Nullable<long> modifiedBy)
        {
            var roomIDParameter = roomID.HasValue ?
                new ObjectParameter("RoomID", roomID) :
                new ObjectParameter("RoomID", typeof(int));
    
            var roomFloorParameter = roomFloor != null ?
                new ObjectParameter("RoomFloor", roomFloor) :
                new ObjectParameter("RoomFloor", typeof(string));
    
            var roomUnitPriceParameter = roomUnitPrice.HasValue ?
                new ObjectParameter("RoomUnitPrice", roomUnitPrice) :
                new ObjectParameter("RoomUnitPrice", typeof(int));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RoomsInfo_UpdateById_Result>("USP_RoomsInfo_UpdateById", roomIDParameter, roomFloorParameter, roomUnitPriceParameter, modifiedByParameter);
        }
    
        public virtual ObjectResult<USP_BookingsInfo_BookingRoomsDetails_GetByCheckInCheckOutDate_Result> USP_BookingsInfo_BookingRoomsDetails_GetByCheckInCheckOutDate(Nullable<System.DateTime> checkInDate, Nullable<System.DateTime> checkOutDate)
        {
            var checkInDateParameter = checkInDate.HasValue ?
                new ObjectParameter("CheckInDate", checkInDate) :
                new ObjectParameter("CheckInDate", typeof(System.DateTime));
    
            var checkOutDateParameter = checkOutDate.HasValue ?
                new ObjectParameter("CheckOutDate", checkOutDate) :
                new ObjectParameter("CheckOutDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_BookingsInfo_BookingRoomsDetails_GetByCheckInCheckOutDate_Result>("USP_BookingsInfo_BookingRoomsDetails_GetByCheckInCheckOutDate", checkInDateParameter, checkOutDateParameter);
        }
    }
}
