@model HotelRoomBookingSystem.Models.ClientsInfo

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Client | New</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @if (TempData["ConfirmationMessage"] != null)
        {
            <div class="alert alert-success">
                @TempData["ConfirmationMessage"]
            </div>
        }

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientIcPassport, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientIcPassport, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClientIcPassport, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientPhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClientPhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClientEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        @{
            List<string> genderOptions = new List<string> { "Male", "Female" };
        }
        @* Inside this C# code block, a `List<string>` named `floorNames` is created and initialized with ten string values, representing the names of different floor levels, from "First" to "Tenth". *@

        <div class="form-group">
            @Html.LabelFor(model => model.ClientGender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ClientGender, new SelectList(genderOptions), "Select Gender", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClientGender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientBirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" class="form-control" id="ClientBirthDate" name="ClientBirthDate" required />
                @Html.ValidationMessageFor(model => model.ClientBirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ClientAddress, new { @class = "form-control", rows = 3 })
                @Html.ValidationMessageFor(model => model.ClientAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-3 col-xs-8">
                <a href="@Url.Action("Index")" class="btn btn-info pull-left">Back</a>
                <input type="submit" value="Create" class="btn btn-primary pull-right" />
            </div>
        </div>
    </div>
}


